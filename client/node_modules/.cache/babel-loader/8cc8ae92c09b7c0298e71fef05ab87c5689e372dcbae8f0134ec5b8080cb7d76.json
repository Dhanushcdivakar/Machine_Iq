{"ast":null,"code":"var _jsxFileName = \"/Users/dhanushcd/Downloads/machineiq/client/src/pages/AvailableJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableJobs = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/jobcards').then(res => setJobs(res.data));\n    axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompleted(res.data));\n  }, []);\n  const isCompleted = jobId => completed.some(c => c.jobId === jobId);\n  const filteredJobs = jobs.filter(job => !isCompleted(job.jobId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"neon mb-4\",\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"To start a job, go to \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/open-workloads\",\n        children: \"Open Workloads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 32\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: filteredJobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card glass\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: job.partName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Machine: \", job.machineName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Job ID: \", job.jobId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableJobs, \"OgeNaGo7gbV+F5z8+Qp7PNgFyU0=\");\n_c = AvailableJobs;\nexport default AvailableJobs;\nvar _c;\n$RefreshReg$(_c, \"AvailableJobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AvailableJobs","_s","jobs","setJobs","completed","setCompleted","get","then","res","data","isCompleted","jobId","some","c","filteredJobs","filter","job","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","map","index","partName","machineName","_c","$RefreshReg$"],"sources":["/Users/dhanushcd/Downloads/machineiq/client/src/pages/AvailableJobs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst AvailableJobs = () => {\n  const [jobs, setJobs] = useState([]);\n  const [completed, setCompleted] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/jobcards').then(res => setJobs(res.data));\n    axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompleted(res.data));\n  }, []);\n\n  const isCompleted = (jobId) => completed.some(c => c.jobId === jobId);\n  const filteredJobs = jobs.filter(job => !isCompleted(job.jobId));\n\n  return (\n    <div className=\"container mt-4\">\n      <h2 className=\"neon mb-4\">Available Jobs</h2>\n      <p>To start a job, go to <a href=\"/open-workloads\">Open Workloads</a>.</p>\n      <div className=\"row\">\n        {filteredJobs.map((job, index) => (\n          <div className=\"col-md-4 mb-3\" key={index}>\n            <div className=\"card glass\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{job.partName}</h5>\n                <p className=\"card-text\">Machine: {job.machineName}</p>\n                <p className=\"card-text\">Job ID: {job.jobId}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AvailableJobs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}