{"ast":null,"code":"var _jsxFileName = \"/Users/dhanushcd/Downloads/machineiq/client/src/pages/ClosedWorkloads.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClosedWorkloads = () => {\n  _s();\n  const [completedJobs, setCompletedJobs] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompletedJobs(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"neon mb-4\",\n      children: \"Closed Workloads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: completedJobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card glass\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: job.partName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Machine: \", job.machineName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Duration: \", job.duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Completed At: \", new Date(job.endTime).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ClosedWorkloads, \"knVWmMkzxZ3Tnc/Jws+w0xePawo=\");\n_c = ClosedWorkloads;\nexport default ClosedWorkloads;\nvar _c;\n$RefreshReg$(_c, \"ClosedWorkloads\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ClosedWorkloads","_s","completedJobs","setCompletedJobs","get","then","res","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","index","partName","machineName","duration","Date","endTime","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/dhanushcd/Downloads/machineiq/client/src/pages/ClosedWorkloads.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst ClosedWorkloads = () => {\n  const [completedJobs, setCompletedJobs] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompletedJobs(res.data));\n  }, []);\n\n  return (\n    <div className=\"container mt-4\">\n      <h2 className=\"neon mb-4\">Closed Workloads</h2>\n      <div className=\"row\">\n        {completedJobs.map((job, index) => (\n          <div className=\"col-md-4 mb-3\" key={index}>\n            <div className=\"card glass\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{job.partName}</h5>\n                <p className=\"card-text\">Machine: {job.machineName}</p>\n                <p className=\"card-text\">Duration: {job.duration}</p>\n                <p className=\"card-text\">Completed At: {new Date(job.endTime).toLocaleString()}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ClosedWorkloads;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACO,GAAG,CAAC,0CAA0C,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIH,gBAAgB,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EAC/F,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKS,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BV,OAAA;MAAIS,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Cd,OAAA;MAAKS,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBP,aAAa,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC5BjB,OAAA;QAAKS,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BV,OAAA;UAAKS,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBV,OAAA;YAAKS,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBV,OAAA;cAAIS,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEM,GAAG,CAACE;YAAQ;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9Cd,OAAA;cAAGS,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAC,WAAS,EAACM,GAAG,CAACG,WAAW;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvDd,OAAA;cAAGS,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAC,YAAU,EAACM,GAAG,CAACI,QAAQ;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrDd,OAAA;cAAGS,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAC,gBAAc,EAAC,IAAIW,IAAI,CAACL,GAAG,CAACM,OAAO,CAAC,CAACC,cAAc,CAAC,CAAC;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAR4BG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASpC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CA1BID,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AA4BrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}