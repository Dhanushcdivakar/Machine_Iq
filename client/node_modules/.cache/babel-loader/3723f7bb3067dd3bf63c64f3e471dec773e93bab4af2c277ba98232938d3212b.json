{"ast":null,"code":"var _jsxFileName = \"/Users/dhanushcd/Downloads/machineiq/client/src/pages/OpenWorkloads.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenWorkloads = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [currentJobId, setCurrentJobId] = useState(null);\n  const [completed, setCompleted] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/jobcards').then(res => setJobs(res.data));\n    axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompleted(res.data));\n  }, []);\n  const isCompleted = jobId => completed.some(c => c.jobId === jobId);\n  const startJob = job => {\n    axios.post('http://localhost:5001/api/jobs/start', job).then(() => {\n      setCurrentJobId(job.jobId);\n    });\n  };\n  const stopJob = jobId => {\n    axios.post('http://localhost:5001/api/jobs/stop', {\n      jobId\n    }).then(() => {\n      setCurrentJobId(null);\n      axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompleted(res.data));\n    });\n  };\n  const activeJobs = jobs.filter(job => !isCompleted(job.jobId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"neon mb-4\",\n      children: \"Open Workloads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: activeJobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card glass\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: job.partName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Machine: \", job.machineName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Job ID: \", job.jobId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), currentJobId === job.jobId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => stopJob(job.jobId),\n              children: \"Stop Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: () => startJob(job),\n              children: \"Start Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenWorkloads, \"Jcp0p6IMpEMg8tjqU/dHf2uQFkY=\");\n_c = OpenWorkloads;\nexport default OpenWorkloads;\nvar _c;\n$RefreshReg$(_c, \"OpenWorkloads\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OpenWorkloads","_s","jobs","setJobs","currentJobId","setCurrentJobId","completed","setCompleted","get","then","res","data","isCompleted","jobId","some","c","startJob","job","post","stopJob","activeJobs","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","partName","machineName","onClick","_c","$RefreshReg$"],"sources":["/Users/dhanushcd/Downloads/machineiq/client/src/pages/OpenWorkloads.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst OpenWorkloads = () => {\n  const [jobs, setJobs] = useState([]);\n  const [currentJobId, setCurrentJobId] = useState(null);\n  const [completed, setCompleted] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/jobcards').then(res => setJobs(res.data));\n    axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompleted(res.data));\n  }, []);\n\n  const isCompleted = (jobId) => completed.some(c => c.jobId === jobId);\n\n  const startJob = (job) => {\n    axios.post('http://localhost:5001/api/jobs/start', job).then(() => {\n      setCurrentJobId(job.jobId);\n    });\n  };\n\n  const stopJob = (jobId) => {\n    axios.post('http://localhost:5001/api/jobs/stop', { jobId }).then(() => {\n      setCurrentJobId(null);\n      axios.get('http://localhost:5001/api/jobs/completed').then(res => setCompleted(res.data));\n    });\n  };\n\n  const activeJobs = jobs.filter(job => !isCompleted(job.jobId));\n\n  return (\n    <div className=\"container mt-4\">\n      <h2 className=\"neon mb-4\">Open Workloads</h2>\n      <div className=\"row\">\n        {activeJobs.map((job, index) => (\n          <div className=\"col-md-4 mb-3\" key={index}>\n            <div className=\"card glass\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{job.partName}</h5>\n                <p className=\"card-text\">Machine: {job.machineName}</p>\n                <p className=\"card-text\">Job ID: {job.jobId}</p>\n                {currentJobId === job.jobId ? (\n                  <button className=\"btn btn-danger\" onClick={() => stopJob(job.jobId)}>Stop Job</button>\n                ) : (\n                  <button className=\"btn btn-success\" onClick={() => startJob(job)}>Start Job</button>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default OpenWorkloads;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}